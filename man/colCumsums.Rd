% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colCumsums.R, R/rowCumsums.R
\name{colCumsums,DelayedMatrix-method}
\alias{colCumsums,DelayedMatrix-method}
\alias{rowCumsums,DelayedMatrix-method}
\title{Calculates the cumulative sum for each row (column) of a matrix-like object}
\usage{
\S4method{colCumsums}{DelayedMatrix}(x, rows = NULL, cols = NULL,
  dim. = dim(x), force_block_processing = FALSE, ...)

\S4method{rowCumsums}{DelayedMatrix}(x, rows = NULL, cols = NULL,
  dim. = dim(x), force_block_processing = FALSE, ...)
}
\arguments{
\item{x}{A NxK \linkS4class{DelayedMatrix}.}

\item{rows}{A \code{\link[base]{vector}} indicating the subset of rows
(and/or columns) to operate over. If \code{\link[base]{NULL}}, no
subsetting is done.}

\item{cols}{A \code{\link[base]{vector}} indicating the subset of rows
(and/or columns) to operate over. If \code{\link[base]{NULL}}, no
subsetting is done.}

\item{dim.}{An \code{\link[base]{integer}} \code{\link[base]{vector}} of
length two specifying the dimension of \code{x}, essential when x is a
\code{\link[base]{numeric}} vector. Note, that this is not a generic
argument and not all methods need provide it.}

\item{force_block_processing}{\code{FALSE} (the default) means that a
seed-aware, optimised method is used (if available). This can be overridden
to use the general block-processing strategy by setting this to \code{TRUE}
(typically not advised). The block-processing strategy loads one or more
columns (\code{colFoo()}) or rows (\code{rowFoo()}) into memory as an ordinary
\link[base:array]{base::array}, with the number of columns/rows depending on
\link[DelayedArray]{getAutoBlockSize}()).}

\item{...}{Additional arguments passed to specific methods.}
}
\value{
Returns a \code{\link[base]{numeric}} \code{\link[base]{matrix}}
with the same dimensions as \code{x}.
}
\description{
Calculates the cumulative sum for each row (column) of a matrix-like object.
}
\details{
The S4 methods for \code{x} of type \code{\link[base]{matrix}},
\code{\link[base]{array}}, or \code{\link[base]{numeric}} call
\code{matrixStats::\link[matrixStats]{rowCumsums}}
/ \code{matrixStats::\link[matrixStats]{colCumsums}}.
}
\examples{
# A DelayedMatrix with a 'matrix' seed
dm_matrix <- DelayedArray(matrix(c(rep(1L, 5),
                                   as.integer((0:4) ^ 2),
                                   seq(-5L, -1L, 1L)),
                                 ncol = 3))

colCumsums(dm_matrix)
# A DelayedMatrix with a 'Matrix' seed
dm_Matrix <- DelayedArray(Matrix::Matrix(c(rep(1L, 5),
                                           as.integer((0:4) ^ 2),
                                           seq(-5L, -1L, 1L)),
                                         ncol = 3))

# Only use rows 2-4
rowCumsums(dm_Matrix, rows = 2:4)
}
\seealso{
\itemize{
\item \code{matrixStats::\link[matrixStats]{rowCumsums}()} and
\code{matrixStats::\link[matrixStats]{colCumsums}()} which are used when
the input is a \code{matrix} or \code{numeric} vector.
\item \code{base::\link[base]{cumsum}()}.
}
}
\author{
Peter Hickey
}
