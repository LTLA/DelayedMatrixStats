% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/colsum.R, R/rowsum.R
\docType{methods}
\name{colsum,HDF5Matrix-method}
\alias{colsum,HDF5Matrix-method}
\alias{rowsum,HDF5Matrix-method}
\title{Give Column and Row Sums of an \emph{HDF5Matrix} Based on a Grouping Variable}
\usage{
\S4method{colsum}{HDF5Matrix}(x, group, reorder = TRUE, na.rm = FALSE,
  filepath = NULL, name = NULL, chunkdim = NULL, level = NULL,
  type = c("double", "integer"), BPPARAM = bpparam())

\S4method{rowsum}{HDF5Matrix}(x, group, reorder = TRUE, na.rm = FALSE,
  filepath = NULL, name = NULL, chunkdim = NULL, level = NULL,
  type = c("double", "integer"), BPPARAM = bpparam())
}
\arguments{
\item{x}{An \link[HDF5Array:HDF5Matrix-class]{HDF5Array::HDF5Matrix} object.}

\item{group}{A vector or factor giving the grouping, with one element per
row of \code{x} for \code{rowsum()} or one element per column of \code{x} for \code{colsum()}.
Missing values will be treated as another group and a warning will be given.}

\item{reorder}{If \code{TRUE}, then the result will be in order of
\code{sort(unique(group))}. If \code{FALSE}, it will be in the order that groups are
encountered.}

\item{na.rm}{logical (\code{TRUE} or \code{FALSE}). Should \code{NA} (including \code{NaN})
values be discarded?}

\item{filepath}{\code{NULL} or the path (as a single string) to the (new or
existing) HDF5 file where to write the dataset. If \code{NULL}, then the dataset
will be written to the current \emph{HDF5 dump file} i.e. the path returned by
\code{\link[HDF5Array:getHDF5DumpFile]{HDF5Array::getHDF5DumpFile()}} will be used.}

\item{name}{\code{NULL} or the name of the HDF5 dataset to write. If \code{NULL}, then
the name returned by \code{[HDF5Array::getHDF5DumpName()]} will be used.}

\item{chunkdim}{The dimensions of the chunks to use for writing the data to
disk. By default,
\code{HDF5Array::getHDF5DumpChunkDim(dim(ans))} will be
used, where \code{ans} is the returned object. See
\code{?}\code{\link[HDF5Array:getHDF5DumpChunkDim]{HDF5Array::getHDF5DumpChunkDim()}} for more information.}

\item{level}{The compression level to use for writing the data to disk. By
default, \code{\link[HDF5Array:getHDF5DumpCompressionLevel]{HDF5Array::getHDF5DumpCompressionLevel()}} will be used. See
\code{?}\code{\link[HDF5Array:getHDF5DumpCompressionLevel]{HDF5Array::getHDF5DumpCompressionLevel()}} for more information.}

\item{type}{The type of the data that will be written to the
\link[=HDF5RealizationSink-class]{HDF5Array} object to create the result. If the
result is known \emph{a priori} to be \code{integer}, then it is recommended to set
\code{type = "integer"}.}

\item{BPPARAM}{An optional \link[=BiocParallelParam]{BiocParallel} instance
determining the parallel back-end to be used during evaluation, or a list of
\link[=BiocParallelParam]{BiocParallel} instances, to be applied in sequence for
nested calls to \strong{BiocParallel} functions.}
}
\description{
Compute column and row sums across rows or columns of a numeric
\link[HDF5Array:HDF5Matrix]{HDF5Array::HDF5Matrix} object for each level of a grouping variable.
}
\details{
\strong{NOTE}: Unlike \code{\link[base:rowsum]{base::rowsum()}}, the result is a
\code{\link[base:double]{base::double}} unless \code{type = "integer"} is specified. Notably, compared
to \code{\link[base:rowsum]{base::rowsum()}}, this means that there are not the same issues with
over/underflow in forming the sum results for integer arguments.
}
\examples{
# A DelayedMatrix with a 'HDF5ArraySeed' seed
# NOTE: Requires that the HDF5Array package is installed
library(HDF5Array)
dm_HDF5 <- writeHDF5Array(matrix(c(rep(1L, 5),
                                   as.integer((0:4) ^ 2),
                                   seq(-5L, -1L, 1L)),
                                 ncol = 3))
group <- c(1, 1, 2)

# Compute the sums and store them in an HDF5-backed DelayedMatrix.
xsum <- colsum(dm_HDF5, group)
class(seed(xsum))

}
