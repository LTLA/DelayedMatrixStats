% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/colsum.R, R/rowsum.R
\docType{methods}
\name{colsum}
\alias{colsum}
\alias{rowsum}
\alias{colsum,ANY-method}
\alias{colsum,HDF5Matrix-method}
\alias{rowsum,DelayedMatrix-method}
\alias{rowsum,matrix-method}
\alias{rowsum,HDF5Matrix-method}
\title{Give Column/Row Sums of a Matrix or Data Frame Based on a Grouping Variable}
\usage{
colsum(x, group, reorder = TRUE, ...)

rowsum(x, group, reorder = TRUE, ...)

\S4method{colsum}{ANY}(x, group, reorder = TRUE, ...)

\S4method{colsum}{HDF5Matrix}(x, group, reorder = TRUE,
  filepath = NULL, name = NULL, chunkdim = NULL, level = NULL,
  type = c("double", "integer"), BPPARAM = bpparam())

\S4method{rowsum}{DelayedMatrix}(x, group, reorder = TRUE,
  force_block_processing = FALSE, ...)

\S4method{rowsum}{matrix}(x, group, reorder = TRUE, ...)

\S4method{rowsum}{HDF5Matrix}(x, group, reorder = TRUE,
  filepath = NULL, name = NULL, chunkdim = NULL, level = NULL,
  type = c("double", "integer"), BPPARAM = bpparam())
}
\arguments{
\item{x}{A NxK \linkS4class{DelayedMatrix}.}

\item{group}{a vector or factor giving the grouping, with one element
    per row of \code{x}.  Missing values will be treated as another
    group and a warning will be given.}

\item{reorder}{if \code{TRUE}, then the result will be in order of
    \code{sort(unique(group))}, if \code{FALSE}, it will be in the order
    that groups were encountered.}

\item{...}{Additional arguments passed to specific methods.}

\item{force_block_processing}{\code{FALSE} (the default) means that a
seed-aware, optimised method is used (if available). This can be overridden
to use the general block-processing strategy by setting this to \code{TRUE}
(typically not advised). The block-processing strategy loads one or more
(depending on \code{getOption("DelayedArray.block.size")}) columns (\code{colFoo()})
or rows (\code{rowFoo()}) into memory as an ordinary \link[base:array]{base::array}.}
}
\value{
A matrix or data frame containing the sums.  There will be one row per
  unique value of \code{group}.
}
\description{
Compute column (row) sums across rows (columns) of a numeric
matrix-like object for each level of a grouping variable. \code{colsum()} and
\code{rowsum()} are generic, with a method for \linkS4class{DelayedMatrix},
data frames, and a default method for vectors and matrices.
}
\details{
The default is to reorder the rows to agree with \code{tapply} as in
  the example below.  Reordering should not add noticeably to the time
  except when there are very many distinct values of \code{group} and
  \code{x} has few columns.

  The original function was written by Terry Therneau, but this is a
  new implementation using hashing that is much faster for large matrices.

  To sum over all the rows of a matrix (ie, a single \code{group}) use
  \code{\link{colSums}}, which should be even faster.

  For integer arguments, over/underflow in forming the sum results in
  \code{NA}.
}
\examples{
# A DelayedMatrix with a 'HDF5ArraySeed' seed
# NOTE: Requires that the HDF5Array package is installed
library(HDF5Array)
dm_HDF5 <- writeHDF5Array(matrix(c(rep(1L, 5),
                                   as.integer((0:4) ^ 2),
                                   seq(-5L, -1L, 1L)),
                                 ncol = 3))

colsum(dm_HDF5, group = c(1, 1, 2))

rowsum(dm_HDF5, group = c(1, 1, 1, 2, 2))
}
\seealso{
\code{\link{tapply}}, \code{\link{aggregate}}, \code{\link{rowSums}}
}
